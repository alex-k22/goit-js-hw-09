{"mappings":"oeAAAA,EAAA,SAEAC,SAASC,OAAOC,KAAK,CAAEC,SAAU,eAEjC,MAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExC,SAASI,EAAcP,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACT,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,C,SAAChB,E,MAAUQ,GACtBK,EAEFH,EAAQM,GAGRL,EAAOK,EAAO,GAEfR,EAAM,G,CAIbP,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOjB,EAAQkB,OAChC,MAAMC,EAAYF,OAAOhB,EAAOiB,OAC1BE,EAAcH,OAAOf,EAASgB,OACpCrB,EAAOwB,QAEP,IAAK,IAAIC,EAAI,EAAGA,GAAKF,EAAaE,GAAK,EACrCnB,EAAcmB,EAAGN,GAChBO,MAAK,EAAC3B,SAAEA,EAAQQ,MAAEA,MACjBX,SAASC,OAAO8B,QAAQ,qBAAqB5B,QAAeQ,MAAU,IAEvEqB,OAAM,EAAC7B,SAAEA,EAAQQ,MAAEA,MAClBX,SAASC,OAAOgC,QAAQ,oBAAoB9B,QAAeQ,MAAU,IAGvEY,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotiflix.Notify.init({ position: 'center-top' });\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const result = {position, delay}\n      if (shouldResolve) {\n        // Fulfill\n        resolve(result) \n       } else {\n        // Reject\n        reject(result)\n        }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', handleSubmit)\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(delayEl.value);\n  const stepValue = Number(stepEl.value);\n  const amountValue = Number(amountEl.value);\n  formEl.reset();\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue) // \n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`); // \n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`); // \n    });\n\n    delayValue += stepValue;\n  }\n}\n\n"],"names":["parcelRequire","Notiflix","Notify","init","position","$47d4ff9957288465$var$formEl","document","querySelector","$47d4ff9957288465$var$delayEl","$47d4ff9957288465$var$stepEl","$47d4ff9957288465$var$amountEl","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","result","addEventListener","event","preventDefault","delayValue","Number","value","stepValue","amountValue","reset","i","then","success","catch","failure"],"version":3,"file":"03-promises.ba3b4451.js.map"}