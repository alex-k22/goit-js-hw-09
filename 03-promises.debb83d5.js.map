{"mappings":"0iBACAA,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAiBC,GAEb,OAAOA,GAAOA,EAAIC,cAAgBC,OAAS,gBAAkBF,C,aCLjEG,SAASC,OAAOC,KAAK,CAAEC,SAAU,eAEjC,IAAMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,kBACjCE,EAASH,SAASC,cAAc,iBAChCG,EAAWJ,SAASC,cAAc,mBAExC,SAASI,EAAcP,EAAUQ,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAChB,WAAUQ,SACtBK,EAEFH,EAAQM,GAGRL,EAAOK,E,GAERR,E,IAIPP,EAAOgB,iBAAiB,UAExB,SAAsBC,GACpBA,EAAMC,iBACN,IAAIC,EAAaC,OAAOjB,EAAQZ,OAC1B8B,EAAYD,OAAOhB,EAAOb,OAC1B+B,EAAcF,OAAOf,EAASd,OAEpCgC,QAAQC,SAAsB,IAAXF,EAAW,YAAlBG,EAAAnC,EAAA,CAAOgC,IAEnB,IAAK,IAAII,EAAI,EAAGA,GAAKJ,EAAaI,GAAK,EACrCpB,EAAcoB,EAAGP,GAChBQ,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUQ,EAAKqB,EAALrB,MACjBX,SAASC,OAAOgC,QAAQ,qBAAoCC,OAAf/B,EAAS,QAAY+B,OAANvB,EAAM,M,IAEnEwB,OAAM,SAAAH,G,IAAG7B,EAAQ6B,EAAR7B,SAAUQ,EAAKqB,EAALrB,MAClBX,SAASC,OAAOmC,QAAQ,oBAAmCF,OAAf/B,EAAS,QAAY+B,OAANvB,EAAM,M,IAGnEY,GAAcE,C","sources":["node_modules/@swc/helpers/lib/_type_of.js","src/js/03-promises.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _typeof;\nfunction _typeof(obj) {\n    \"@swc/helpers - typeof\";\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n}\n;\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotiflix.Notify.init({ position: 'center-top' });\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('[name=\"delay\"]');\nconst stepEl = document.querySelector('[name=\"step\"]');\nconst amountEl = document.querySelector('[name=\"amount\"]');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const result = {position, delay}\n      if (shouldResolve) {\n        // Fulfill\n        resolve(result) \n       } else {\n        // Reject\n        reject(result)\n        }\n    }, delay);\n  });\n}\n\nformEl.addEventListener('submit', handleSubmit)\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  let delayValue = Number(delayEl.value);\n  const stepValue = Number(stepEl.value);\n  const amountValue = Number(amountEl.value);\n\n  console.log(typeof(amountValue))\n\n  for (let i = 1; i <= amountValue; i += 1) {\n    createPromise(i, delayValue) // \n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`); // \n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`); // \n    });\n\n    delayValue += stepValue;\n  }\n}\n\n"],"names":["Object","defineProperty","$f59351132b4b3cee$exports","value","default","obj","constructor","Symbol","Notiflix","Notify","init","position","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","result","addEventListener","event","preventDefault","delayValue","Number","stepValue","amountValue","console","log","$parcel$interopDefault","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.debb83d5.js.map"}